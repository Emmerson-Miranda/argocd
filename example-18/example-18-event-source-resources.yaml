---
# https://kubernetes.io/docs/reference/access-authn-authz/rbac/

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-events-reader
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-events-reader-serviceaccount
  namespace: argo-events
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-events-reader-rb
  namespace: argo-events
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-events-reader
subjects:
- kind: ServiceAccount
  name: argo-events-reader-serviceaccount
  namespace: argo-events

---
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: resource
  namespace: argo-events
spec:
  template:
    serviceAccountName: argo-events-reader-serviceaccount # assign a service account with `get`, `list` and `watch` permissions on the resource being watched.
  resource:
    example:
      # namespace to listen events within
      namespace: argo-events
      # resource group
      group: ""
      # resource version
      version: v1
      # resource kind
      resource: configmap
      # type of events
      # possible values are ADD, DELETE, UPDATE
      # Optional
      eventTypes:
        - ADD

#        # fields provide listing options to K8s API to watch objects
#        fields:
#            # It's an extention of https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors/.
#            # Unlike k8s field selector, any arbitrary field like "spec.serviceAccountName" is supported.
#          - key: metadata.name
#            # Supported operations like =, ==, !=.
#            # Defaults to ==.
#            # optional.
#            operation: ==
#            # Value could a string or a regex like "my*"
#            value: my-workflow


#    # create event if workflow with prefix "my-workflow" gets modified
#    example-with-prefix-filter:
#      namespace: "argo-events"
#      group: argoproj.io
#      version: v1alpha1
#      resource: workflows
#      eventTypes:
#        - UPDATE
#        - ADD
#      filter:
#        prefix: "my-workflow"
#
#    # create event when a pod is created before 2019-03-27T010:52:32Z
#    example-with-created-by-filter:
#      namespace: "argo-events"
#      group: argoproj.io
#      version: v1alpha1
#      resource: workflows
#      eventTypes:
#        - ADD
#      filter:
#        createdBy: "2019-04-06T12:52:11Z"
#
#    example-with-multi-filters:
#      namespace: "argo-events"
#      group: ""
#      version: v1
#      resource: pods
#      eventTypes:
#        - ADD
#      filter:
#        createdBy: "2019-04-06T12:52:11Z"
#        labels:
#          - key: workflows.argoproj.io/completed
#            operation: ==
#            value: "true"
#        prefix: "hello"
#
#    # watch for completed workflows in any namespace
#    example-without-namespace:
#      # namespace: (omitted to match any namespace)
#      group: "k8s.io"
#      version: v1
#      resource: workflows
#      eventTypes:
#        - ADD
#      filter:
#        labels:
#          - key: workflows.argoproj.io/completed
#            operation: ==
#            value: "true"